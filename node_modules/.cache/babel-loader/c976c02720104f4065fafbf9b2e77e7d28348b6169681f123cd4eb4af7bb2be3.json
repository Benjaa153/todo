{"ast":null,"code":"var _jsxFileName = \"/home/benja/todo/src/Components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const inputText = useRef(); // utilizamos el hook de useRef para no tener que acceder al elemento input mediante el DOM\n\n  const [todo, setTodo] = useState({});\n  const [todos, setTodos] = useState([{\n    todo: 'todo 1',\n    completed: false\n  }, {\n    todo: 'todo 2',\n    completed: false\n  }, {\n    todo: 'todo 3',\n    completed: false\n  }]);\n  const handleChange = e => setTodo({\n    [e.target.name]: e.target.value\n  });\n  const handleClick = e => {\n    if (Object.keys(todo).length === 0 || todo.todo.trim() === '') {\n      alert('el campo no puede estar vacio');\n      return;\n    }\n    setTodos([...todos, todo]);\n  };\n  const deleteTodo = indice => {\n    const resetTodos = [...todos];\n    resetTodos.splice(indice, 1);\n    setTodos(resetTodos);\n  };\n  const handleCambio = indice => {\n    const newTodos = todos.slice(); // Copia de la matriz\n    newTodos[indice].completed = !newTodos[indice].completed; // Cambiar el valor de 'completed'\n    setTodos(newTodos); // Actualizar el estado\n  };\n\n  const updateTodo = indice => {\n    const pers = personas.find(elem => elem.id == identificador);\n    inputText.current.value = todo.todo;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Agregar tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"todo\",\n        onChange: handleChange,\n        ref: inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), todos.map((value, index) => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: value.todo,\n      index: index,\n      deleteTodo: deleteTodo,\n      handleCambio: handleCambio,\n      completed: value.completed,\n      updateTodo: updateTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Te quedan \", todos.filter(todo => !todo.completed).length, \" tareas por terminar\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Form, \"8jyfZR8MSN64AXCWr24KGS4AwgY=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useRef","Todo","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","inputText","todo","setTodo","todos","setTodos","completed","handleChange","e","target","name","value","handleClick","Object","keys","length","trim","alert","deleteTodo","indice","resetTodos","splice","handleCambio","newTodos","slice","updateTodo","pers","personas","find","elem","id","identificador","current","children","onSubmit","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","ref","onClick","map","index","filter","_c","$RefreshReg$"],"sources":["/home/benja/todo/src/Components/Form.jsx"],"sourcesContent":["import React, {useState, useRef} from 'react'\nimport Todo from './Todo'\n\n\nconst Form = () => {\n\n    const inputText = useRef(); // utilizamos el hook de useRef para no tener que acceder al elemento input mediante el DOM\n\n    const [todo, setTodo] = useState({})\n    const [todos, setTodos] = useState([\n        {todo: 'todo 1', completed: false},\n        {todo: 'todo 2', completed: false},\n        {todo: 'todo 3', completed: false}\n    ])\n\n    const handleChange = e => setTodo({[e.target.name]: e.target.value})\n\n    const handleClick = e => {\n        if(Object.keys(todo).length === 0 || todo.todo.trim() === '') {\n            alert('el campo no puede estar vacio')\n            return\n        }\n        setTodos([...todos, todo])\n    }\n\n    const deleteTodo = indice => {\n        const resetTodos = [...todos]\n        resetTodos.splice(indice, 1)\n        setTodos(resetTodos)\n    }\n\n    const handleCambio = (indice) => {\n        const newTodos = todos.slice(); // Copia de la matriz\n        newTodos[indice].completed = !newTodos[indice].completed; // Cambiar el valor de 'completed'\n        setTodos(newTodos); // Actualizar el estado\n    }\n\n    const updateTodo = (indice ) => {\n            const pers = personas.find((elem) => elem.id == identificador)\n        \n        inputText.current.value = todo.todo\n    }\n\n    return (\n        <>\n            <form onSubmit={e => e.preventDefault()}>\n                <label>Agregar tarea</label><br />\n                <input type=\"text\" name=\"todo\" onChange={handleChange} ref={inputText}/>\n                <button onClick={handleClick}></button>\n            </form>\n            {\n                todos.map((value, index) => (\n                    <Todo \n                        todo={value.todo}\n                        key={index}\n                        index={index}\n                        deleteTodo={deleteTodo}\n                        handleCambio = {handleCambio}\n                        completed={value.completed}\n                        updateTodo={updateTodo}\n                    />\n                ))\n            }\n            <div>Te quedan {todos.filter((todo) => !todo.completed).length} tareas por terminar</div>\n        </>\n    )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}